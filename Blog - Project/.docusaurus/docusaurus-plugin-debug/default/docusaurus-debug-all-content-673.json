{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/Hidroponia-Project/docs",
          "tagsPath": "/Hidroponia-Project/docs/tags",
          "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs",
          "editUrlLocalized": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/es/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/home/sarti/documents/projects/Hidroponia-Project/Blog - Project/sidebars.js",
          "contentPath": "/home/sarti/documents/projects/Hidroponia-Project/Blog - Project/docs",
          "contentPathLocalized": "/home/sarti/documents/projects/Hidroponia-Project/Blog - Project/i18n/es/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "id": "Informe/Hardware",
              "title": "Hardware",
              "description": "Introducción",
              "source": "@site/docs/Informe/Hardware.md",
              "sourceDirName": "Informe",
              "slug": "/Informe/Hardware",
              "permalink": "/Hidroponia-Project/docs/Informe/Hardware",
              "draft": false,
              "unlisted": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Informe/Hardware.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Software",
                "permalink": "/Hidroponia-Project/docs/Informe/Software"
              }
            },
            {
              "id": "Informe/Software",
              "title": "Software",
              "description": "",
              "source": "@site/docs/Informe/Software.md",
              "sourceDirName": "Informe",
              "slug": "/Informe/Software",
              "permalink": "/Hidroponia-Project/docs/Informe/Software",
              "draft": false,
              "unlisted": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Informe/Software.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Informe Final",
                "permalink": "/Hidroponia-Project/docs/category/informe-final"
              },
              "next": {
                "title": "Hardware",
                "permalink": "/Hidroponia-Project/docs/Informe/Hardware"
              }
            },
            {
              "id": "intro",
              "title": "Inicio",
              "description": "¿Para qué existe esta web?",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/Hidroponia-Project/docs/intro",
              "draft": false,
              "unlisted": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Informe Final",
                "permalink": "/Hidroponia-Project/docs/category/informe-final"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "category",
                "label": "Informe Final",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "Informe/Software"
                  },
                  {
                    "type": "doc",
                    "id": "Informe/Hardware"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "El proyecto finalmente fue finalizado para el mes de noviembre, este ya es completamente funcional. Muy seguramente le añadamos Anexos con la intención de mejorar el software extra que incluye: la aplicación de celular y la aplicación web. Pensamos que todavía podrían mejorar.",
                  "slug": "/category/informe-final",
                  "permalink": "/Hidroponia-Project/docs/category/informe-final"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "release/thirteen",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/thirteen",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-10-9.md",
            "source": "@site/blog/Notas/2024-10-9.md",
            "title": "Actualización [ 13 ] | Armado | Lampara UV",
            "description": "Añadimos una lampara UV al proyecto",
            "date": "2024-10-09T00:00:00.000Z",
            "tags": [
              {
                "label": "Avances",
                "permalink": "/Hidroponia-Project/blog/tags/avances"
              },
              {
                "label": "Lampara UV",
                "permalink": "/Hidroponia-Project/blog/tags/lampara-uv"
              }
            ],
            "readingTime": 0.77,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/thirteen",
              "title": "Actualización [ 13 ] | Armado | Lampara UV",
              "authors": [
                "Team"
              ],
              "tags": [
                "Avances",
                "Lampara UV"
              ]
            },
            "unlisted": false,
            "nextItem": {
              "title": "Actualización [ 12 ] | Armado | Detalles",
              "permalink": "/Hidroponia-Project/blog/release/twelve"
            }
          },
          "content": "## Añadimos una lampara UV al proyecto\n\nInmediatamente añadimos los plantines nos dispusimos a añadir una lampara UV al percatarnos de la poca luz solar que entraba a la instancia, para ello decidimos utilizar el último de nuestros disparos de la placa y el mismo timer; aunque hay un problema, el timer es muy impreciso para ello. Por suerte ya planteamos una solución: utilizaremos la Raspberry para que por medio de un script tome el horario local del día y se encargué de mandar un dato vía serial al circuito que le diga si prender o no las lamparas UV.\n\nAnteriormente habiamos utilizado el timer interno del microcontrolador, pero esto es impreciso; no tenemos garantía de sí nuestros cálculos dan en el clavo o no, porque no podemos tener en cuenta la cantidad de tiempo que tardan en ejecutarse las otras lineas de código del circuito. \n\n![Foto de la hidroponia](../Ref/Hidroponia_two.jpeg)\n\n#### (es muy fachera)"
        },
        {
          "id": "release/twelve",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/twelve",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-10-7.md",
            "source": "@site/blog/Notas/2024-10-7.md",
            "title": "Actualización [ 12 ] | Armado | Detalles",
            "description": "Armado",
            "date": "2024-10-07T00:00:00.000Z",
            "tags": [
              {
                "label": "Avances",
                "permalink": "/Hidroponia-Project/blog/tags/avances"
              },
              {
                "label": "Armado",
                "permalink": "/Hidroponia-Project/blog/tags/armado"
              }
            ],
            "readingTime": 1.24,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/twelve",
              "title": "Actualización [ 12 ] | Armado | Detalles",
              "authors": [
                "Team"
              ],
              "tags": [
                "Avances",
                "Armado"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 13 ] | Armado | Lampara UV",
              "permalink": "/Hidroponia-Project/blog/release/thirteen"
            },
            "nextItem": {
              "title": "Actualización [ 11 ] | Explosión y...",
              "permalink": "/Hidroponia-Project/blog/release/eleven"
            }
          },
          "content": "## Armado\n\nLos últimos dias anduvimos trabajando en diseñar e imprimir los modelos 3D que contendrán tanto la placa como la Raspberry Pi y a su vez solucionando problemas con la bomba; esta se prendía y apagaba por el sobrecalientamiento. Esto es un problema gigantezco en una hidroponia; si la bomba se apaga, los plantines *mueren*. \n\nLa bomba no debe dejar de bombear por mucho tiempo, así que como solución para que no se sobrecalentara decidimos utilizar un disparo de nuestra placa para ir prendiendola y apagandola de forma intermitente. Fue justo en esta prueba donde nuestra placa hace unos dias explotó (en el momento menos conveniente posible), pero rápidamente lo solucionamos.\n\nUtilizamos el timer para calcular un aproximado de 5 minutos de prendido y apagado utilizando la función de GradoZero() de nuestro código. Esa función se ejecuta cada 180° de la onda senoidal, justamente al cambiar de polaridad, teniendo en cuenta dicho dato y teniendo en cuenta que cada 1ms hay un cambio de polaridad, utilizamos un contador que fuese incrementandose hasta un valor apróximado al número de veces que debe repetirse la función GradoZero() para llegar a 5 minutos. La solución funcionó perfectamente.\n\n## Finalmente añadimos los plantines. \n\nCon el PH ya regulado, las soluciones Macro y Micro añadidas y el correcto funcionamiento de la bomba de agua, finalmente lo hicimos: añadimos los plantines. Estos se tratan solo de plantines de lechuga, nada muy extravagante, su supervivencia es la prueba de fuego de nuestro proyecto.\n\n![Plantas](../Ref/Plantines.jpeg)"
        },
        {
          "id": "release/eleven",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/eleven",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-10-3.md",
            "source": "@site/blog/Notas/2024-10-3.md",
            "title": "Actualización [ 11 ] | Explosión y...",
            "description": "Explosión XD (De vuelta)",
            "date": "2024-10-03T00:00:00.000Z",
            "tags": [
              {
                "label": "Explosión",
                "permalink": "/Hidroponia-Project/blog/tags/explosion"
              },
              {
                "label": "Avances",
                "permalink": "/Hidroponia-Project/blog/tags/avances"
              }
            ],
            "readingTime": 2.165,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/eleven",
              "title": "Actualización [ 11 ] | Explosión y...",
              "authors": [
                "Team"
              ],
              "tags": [
                "Explosión",
                "Avances"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 12 ] | Armado | Detalles",
              "permalink": "/Hidroponia-Project/blog/release/twelve"
            },
            "nextItem": {
              "title": "Actualización [ 10 ] | Comunicación con MyCodo éxitosa.",
              "permalink": "/Hidroponia-Project/blog/release/ten"
            }
          },
          "content": "## Explosión XD (De vuelta)\n\nEl circuito explotó nuevamente. ¿Por qué? Faltaban una serie de cambios en el PCB (solo un diodo xD) nadie entendió como no sucedió antes. En conclusión: que epico.\n\n![Placa explotada ( OTRA VEZ XD )](../Ref/PLACA_EXPLOSIVA_DOS.jpeg)\n## Representación gráfica del suceso\n![Representación de explosión XD](../Ref/PLACA_EXPLOSIVA_EDIT.jpeg)\n\n## Momentos antes del desastre XD\n\n![Los pibes foto xD](../Ref//Foto_piola_dos.jpeg)\n![Los pibes foto xD](../Ref//Foto_piola_tres.jpeg)\n\n\n## Avances\n\nDejamos bombeando el agua unos dias con la intención de que el cloro se evaporará y poder finalmente regular el PH del agua. \n\nPero... ¿Por qué todo esto? Si el lector no está familiarizado con el funcionamiento de una Hidroponia en general, le será importante leer lo que escriba a continuación:\n\n## Hidroponia\n\nUna hidroponia es, en esencia, el arte de cultivar plantas sobre una superficie sólida a la que solo tendrá acceso una corriente de agua. Pero esto da una *gran* serie de problemas al no ser del todo natural; uno de ellos es el nivel de PH del agua, pero primero para ello debemos de conocer que es el PH.\n\nEl \"PH\" es una unidad logarítmica del 1-14 que regula el nivel de acidez y alcalinidad de \"algo\", siendo en este caso: agua. A menor nivel este se encuentre, mayor será el nivel de ácidez que contendrá ese \"algo\" y a mayor nivel se encuentre, mayor será el nivel de alcalinidad.\n\nEl nivel de PH adecuado para cada contexto depende del tipo de planta a plantar, y son muchas las soluciones que pueden afectar el nivel de PH del agua. En nuestro caso concreto quisimos plantar lechuga, siendo su valor recomendado un rango de entre un **5.8 - 6.3** de PH. \n\n![Valores Lechuga](../Ref/Lechuga.jpeg)\n\nA su vez, las soluciones nutritivas que utilizamos son las [Micro y Macro](https://www.verdeagua.com.ar/productos/kit-nutrientes-hidroponia-verdeagua-macro-y-micro/) de la empresa [Verdeagua.](https://www.verdeagua.com.ar/)\n\nEs importante tener en cuenta también que las soluciones nutritivas que necesita cada planta, independientemente de cual sea, también **alteran el PH**. Así que *teganlo en cuenta*. En nuestro caso para regularlo fue mayormente a prueba y error.\n\n---\n\nNuestro problema fue sencillo de resolver: el PH del agua del colegio *era muy alto* y teniamos que reducirlo, para ello compramos un reductor de PH, lo que en esencia es un ácido, nosotros utilizamos concretamente el [Namaste PH.](https://www.estoyverde.com.ar/fertilizantes/namaste-ph-100-ml.)\n\n![Namaste PH](../Ref/Namaste.png)\n\nEl mismo lo compramos en Lomas, concretamente en la tienda [Estoy Verde](https://www.estoyverde.com.ar/) tienda la cual recomendamos encarecidamente. Su atención es *muy* buena y su dueño nos resolvió una gran cantidad de dudas respecto al buen armado de una hidroponia. \n\nEstamos muy satisfechos y nos enorgulleceria mucho el que nuestra recomendación pudiese, al menos, producirles una venta."
        },
        {
          "id": "release/ten",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/ten",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-18.md",
            "source": "@site/blog/Notas/2024-9-18.md",
            "title": "Actualización [ 10 ] | Comunicación con MyCodo éxitosa.",
            "description": "Logramos comunicar correctamente el envío de datos seriales a los Input de entrada de datos de MyCodo.",
            "date": "2024-09-18T00:00:00.000Z",
            "tags": [
              {
                "label": "Communication",
                "permalink": "/Hidroponia-Project/blog/tags/communication"
              },
              {
                "label": "MyCodo",
                "permalink": "/Hidroponia-Project/blog/tags/my-codo"
              }
            ],
            "readingTime": 2.81,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/ten",
              "title": "Actualización [ 10 ] | Comunicación con MyCodo éxitosa.",
              "authors": [
                "Team"
              ],
              "tags": [
                "Communication",
                "MyCodo"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 11 ] | Explosión y...",
              "permalink": "/Hidroponia-Project/blog/release/eleven"
            },
            "nextItem": {
              "title": "Actualización [ 9 ] | PCB && Block Diagram",
              "permalink": "/Hidroponia-Project/blog/release/nine"
            }
          },
          "content": "## Logramos comunicar correctamente el envío de datos seriales a los Input de entrada de datos de MyCodo.\n\n### ¿Cómo lo hicimos?\n\nExactamente de la misma forma que especificamos en la publicación anterior. Todo salió perfectamente tal y como lo planeamos.\n\n### Código\n\nNo pensamos explicar el código *todavía*. Pensamos refátorizarlo nuevamente para que sea más legible y más práctico. Solo queremos que el envío de datos sea una función de este. Aunque lo importante es que todo funcionó correctamente, sí alguien quiere ver el código para este punto del proyecto, este se encuentra [aquí](https://github.com/Sartalan/Hidroponia-Project/tree/a0702f19501088477bc9d1eed7a1a17f6e012fc4).\n\nLuego ya cuando esté refáctorizado pensamos explicarlo con mayor detalle y su respectivo diagrama de flujo. \n\nPor ahora nuestra siguiente acción a ejecutar es el refactorizarlo y crear un servidor con él. Más en concreto con **Flask**, la cuál es una libreria de Python utilizada en el Backend, para justamente, crear servidores. Nuestra intención es la siguiente: \n\n+ Haremos que la misma variable de datos que retorne la función que recibe los datos del Arduino esté ligada a Flask en un servidor para, sí éste recibe solicitudes le devuelva el dato que hayan solicitado en una response. Nuestra intención es comenzar con la comunicación HTTP de la App. En un comienzo pensabamos utilizar Express.js, pero se vé que han cambiado las cosas; nos es más práctico seguir utilizando Python y no migrar a otro lenguaje de programación, sí hiciesemos eso, el mismo script que se comunica con MyCodo no podría ser un servidor en sí mismo, por tanto decidimos que fuese así.\n\n### Cambios | Ideas\n\nOtro cambio a denotar es el que -muy posiblemente- utilizaremos el módulo Sense Hat de la Raspberry Pi para hacer de nuestro proyecto además de un sistema de monitoreo, hacerlo también una estación metereológica. Pensamos que, primero hará de nuestro proyecto uno más profesional y también porque estamos aburridos; ya no tenemos tantos retos como antes. De igual forma la integración con el Sense Hat se ve sencilla y la comunicación entre todos los Software ya está prácticamente hecha. \n\nAdemas tiene una matriz led muy fachera que puede, o mostrar el logo de Wolfsrudel (nuestra empresa) o la ip del servidor en la red local así le establecemos dicha IP a la App/Programa manualmente al -seguramente- no hacerla fija.\n\nHablando de la matriz led y la facha; comenzamos la realización del Modelo 3D que envolverá nuestro proyecto. Pensamos que ésta puede tener un acrilico en frente así se ve toda la facha del circuito (｡◕‿◕｡).\n\nLuego, otra idea que tenemos es que una vez hayamos realizado el modelo 3D de todas las partes, exportarlo junto con *todos* los circuitos y subirlo a la página web. Para esto podríamos utilizar Three.js.\nLa página web de la documentación justamente está escrita con React, así que deberemos de utilizar una variante la cuál está adaptada para React. Esto ya una vez lo hemos querido hacer para proyectos pasados, y no pudimos; insertar un modelo 3D a una página web es un completo fiasco y más sí tenés muchas técnologias en tu misma web, de igual forma lo pensamos hacer por el profesionalismo, pero será mucho más tarde, muy al final del proyecto y seguramente a la vez que estemos realizando el video de Youtube del proyecto (el cuál también pensamos añadir a la página principal :p).\n\nSomos un grupo de dementes.\n\nFin del comunicado."
        },
        {
          "id": "release/nine",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/nine",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-12.md",
            "source": "@site/blog/Notas/2024-9-12.md",
            "title": "Actualización [ 9 ] | PCB && Block Diagram",
            "description": "Buenas!",
            "date": "2024-09-12T00:00:00.000Z",
            "tags": [
              {
                "label": "MyCodo",
                "permalink": "/Hidroponia-Project/blog/tags/my-codo"
              }
            ],
            "readingTime": 1.03,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/nine",
              "title": "Actualización [ 9 ] | PCB && Block Diagram",
              "authors": [
                "Team"
              ],
              "tags": [
                "MyCodo"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 10 ] | Comunicación con MyCodo éxitosa.",
              "permalink": "/Hidroponia-Project/blog/release/ten"
            },
            "nextItem": {
              "title": "Actualización [ 8 ] | Comunicación a MyCodo | Filtro",
              "permalink": "/Hidroponia-Project/blog/release/eight"
            }
          },
          "content": "## Buenas!\n\nHoy hemos terminado de montar el PCB y realizar el código que toma la lectura de todos los sensores y lo envía a través de serial hacia la Raspberry. Comenzando ahora, nuestro nuevo reto: la correcta interceptación de datos de parte de la Raspberry utilizando Python. \nUna forma de resolver este problema de forma sencilla es la que hicimos antes, y es tener el script de Python con la interceptación de datos seriales desde MyCodo, lo cual, aunque solucione nuestro problema, es *muy* poco práctico.\n\n#### Nuestra idea es la siguiente:\n+ Queremos que un *único* script de Python se encargue de manejar todos los datos enviados desde el microcontrolador y se encargue de clasificarlos para luego escribirlos en un archivo de cualquier tipo. Luego habrá scripts independientes en los widgets de MyCodo que crearán un sencillo bucle de lectura de datos de un archivo del cuál extraeran el dato a mostrar en pantalla.\n\nTodo esto llevará a que la comunicación entre las partes quede tal que así:\n\n![Diagrama de Comunicación entre códigos](../Ref/Diagrama%20En%20Bloques.png)\n\n### PCB \n\nTambién, para concluir con el tema, les adjuntamos el PCB tanto montado como en KiCad al habernos quedado pendiente la última vez:\n\n![PCB | KiCad](../Ref/PCB.jpeg)\n---\n![PCB | Montado](../Ref/PCB_FOTO.jpeg)"
        },
        {
          "id": "release/eight",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/eight",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-9.md",
            "source": "@site/blog/Notas/2024-9-9.md",
            "title": "Actualización [ 8 ] | Comunicación a MyCodo | Filtro",
            "description": "(｡◕‿◕｡)",
            "date": "2024-09-09T00:00:00.000Z",
            "tags": [
              {
                "label": "MyCodo",
                "permalink": "/Hidroponia-Project/blog/tags/my-codo"
              }
            ],
            "readingTime": 1.74,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/eight",
              "title": "Actualización [ 8 ] | Comunicación a MyCodo | Filtro",
              "authors": [
                "Team"
              ],
              "tags": [
                "MyCodo"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 9 ] | PCB && Block Diagram",
              "permalink": "/Hidroponia-Project/blog/release/nine"
            },
            "nextItem": {
              "title": "Actualización [ 7 ] | Avances",
              "permalink": "/Hidroponia-Project/blog/release/seven"
            }
          },
          "content": "### (｡◕‿◕｡)\n\nLogramos comunicar correctamente la toma de datos de Python con MyCodo, esto fue realmente más fácil de lo que pensamos al no tener que interaccionar con algún otro lenguaje de programación en el proceso. \nEl resto será cuestión de tiempo para que se logré.\n\n### Filtro\n\nHoy fue impreso el filtro/recipiente necesario para alojar los plantines.\n\n![Filtro](../Ref/Filtro.jpeg)\n\n### Ideas\n\nSí logramos unificar todo el proyecto con MyCodo rápidamente, pensamos que podríamos crear un *programa* de escritorio para poder muestrear los datos. Todo esto con la intención de tener más control sobre nuestro código.\nRealmente con MyCodo *no sabemos lo que estamos haciendo*, lo cual es una ayuda realmente práctica porque uno no debe de saber como funciona internamente el programa; pero no nos satisface.\nSabemos utilizar una técnologia llamada Tauri. La cual es todo un ecosistema de herramientas que te permiten utilizar Webview (Microsoft) para crear un programa de escritorio con técnologia web y, manejar todo su Backend utilizando el lenguaje de bajo nivel **Rust**.\nPensamos que haría que el proyecto se sintiera menos incompleto y que sería grandioso que tuviese un programa propio también.\n\nAparte, ya tenemos un código; [Spectrum-IOT_WebPage](https://sartalan.github.io/Spectrum-IOT_WebPage/)\n\nSpectrum-IOT_WebPage es una aplicación web que fue creada para monitorear la lectura de datos que ésta recibiera de una casa completamente automátizada para que unos robots se movilizarán de forma autonóma en ella; como es de imaginar, el *proyecto fue cancelado*. Es justamente por ello que nos gustaría reutilizar el código y adaptarlo al diseño de la App (por una cuestión de consistencia). \nAunque también seria increible que pudiese ser hecho para que, a diferencia de la app, se pueda modificar alguna parte del código del microcontrolador y regular mágnitudes. Sería altamente práctico como una interfaz visual táctil que pudiese estar instalada en la Raspberry y, simplemente con un par de touch's y la misma navegación intuitiva de la aplicación web, pudiese ser controlado. \n\nAunque muy seguramente no lleguemos con el tiempo para ello; pero puede que sea un buen código Open Source del que se pueda sacar mucho provecho sí alguien así lo quiere."
        },
        {
          "id": "release/seven",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/seven",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-4.md",
            "source": "@site/blog/Notas/2024-9-4.md",
            "title": "Actualización [ 7 ] | Avances",
            "description": "Avances",
            "date": "2024-09-04T00:00:00.000Z",
            "tags": [
              {
                "label": "épico",
                "permalink": "/Hidroponia-Project/blog/tags/epico"
              }
            ],
            "readingTime": 1.115,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Alan Barrera",
                "title": "Software Developer",
                "url": "https://github.com/sartalan",
                "imageURL": "https://github.com/sartalan.png",
                "key": "Alan"
              }
            ],
            "frontMatter": {
              "slug": "release/seven",
              "title": "Actualización [ 7 ] | Avances",
              "authors": [
                "Alan"
              ],
              "tags": [
                "épico"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 8 ] | Comunicación a MyCodo | Filtro",
              "permalink": "/Hidroponia-Project/blog/release/eight"
            },
            "nextItem": {
              "title": "Actualización [ 6 ] | Comunicación de Dispositivos",
              "permalink": "/Hidroponia-Project/blog/release/six"
            }
          },
          "content": "## Avances\n\n#### Entre ayer y hoy comenzamos el desarrollo del segundo PCB\n\nEste consta de más sensores incorporados y la inclusión de un nuevo disparo de triac, llevando por ende un segundo circuito de disparo (con todo lo que ello conlleva; Snubber's, Optoacopladores, Triac's, etc.) Al finalizar el PCB -y sí funciona- daremos una mayor explicación de su funcionamiento\n\n#### Los sensores que vamos a usar son los siguientes:\n\n+ [DS18B20 | **Temperatura**](https://www.analog.com/media/en/technical-documentation/data-sheets/ds18b20.pdf)\n+ [DHT11   | **Humedad**](https://www.google.com/url?sa=t&source=web&rct=j&opi=89978449&url=https://www.mouser.com/datasheet/2/758/DHT11-Technical-Data-Sheet-Translated-Version-1143054.pdf&ved=2ahUKEwi20Yb096mIAxVmkZUCHUF5G2QQFnoECBwQAQ&usg=AOvVaw2tdFgaeZgeQmJr3SkJiugP)\n+ [M1592 | **Lluvia**](https://cdn.sparkfun.com/datasheets/Sensors/Temp/DS18B20.pdf) \n+ [LDR | **Fotorresistencia**](https://www.youtube.com/watch?v=dQw4w9WgXcQ&pp=ygUJcmljayByb2xs)\n+ [YF-S201 | **Caudálimetro**](http://www.mantech.co.za/datasheets/products/yf-s201_sea.pdf)\n\nTambién un detalle a añadir es que decidimos utilizar el **Arduino Nano.**\n\n## Hoy\n\nBásicamente hicimos todo el esquemático y lo próximo a realizar es el PCB cuando se nos dé el aprobado del mismo.\nTesteamos nuevamente la comunicación serial con el Arduino Nano y funcionó correctamente, al igual que cada conexionado independiente de cada sensor con su respectiva forma de conexión, así que todo debería salir de la forma prevista. Seguramente algo salga mal, como siempre. Es parte de ser un técnico electrónico.\n![Fotos trabajando jdawjd](../Ref/Foto_Laburando_Dos.jpeg)\n![Foto mía jdawjd](../Ref/Foto_Laburando_Uno.jpeg)\n\nDato a tener en cuenta sí querés que la Raspberry Pi se comunique por USB a un microcontrolador. Tenés que permitirle a tu usuario a acceder al grupo \"dialout\". Es importante por una cuestión de permisos que solo el super usuario puede brindar."
        },
        {
          "id": "release/six",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/six",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-1.md",
            "source": "@site/blog/Notas/2024-9-1.md",
            "title": "Actualización [ 6 ] | Comunicación de Dispositivos",
            "description": "Comunicación",
            "date": "2024-09-01T00:00:00.000Z",
            "tags": [
              {
                "label": "épico",
                "permalink": "/Hidroponia-Project/blog/tags/epico"
              }
            ],
            "readingTime": 1.705,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/six",
              "title": "Actualización [ 6 ] | Comunicación de Dispositivos",
              "authors": [
                "Team"
              ],
              "tags": [
                "épico"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 7 ] | Avances",
              "permalink": "/Hidroponia-Project/blog/release/seven"
            },
            "nextItem": {
              "title": "Actualización [ 5 ] | Explosión XDD",
              "permalink": "/Hidroponia-Project/blog/release/five"
            }
          },
          "content": "## Comunicación \n#### **Raspberry Pi - Microcontrolador**\n\nDecidimos finalmente comunicar la Raspberry Pi y el Microcontrolador entre sí vía **USB** , este cambio -aunque drástico- es mucho más conveniente para nuestro proyecto, y de igual forma no cambiará demasiado al tener que vernos obligados a utilizar wifi para comunicar la Raspberry Pi con la App.\n\n#### Quedando el gráfico tal que así:\n\n![Gráfico piola](../Ref/Diagrama%20en%20Bloques%20I%20Raspberry%20Pi%20Server%20Communication%20TWO.png)\n\n#### **Nota:** En aquel momento se pensaba utilizar el ESP WROOM, luego cambiamos al Arduino Nano al no necesitar del Wifi y, tener mayor acceso a la información de como programarlo.\n\n### Importante\n\nCuestión: Aquí viene lo importante:\n+ Logramos enviar correctamente los datos del microcontrolador a la Raspberry Pi por USB. \n\n### ¿Cómo se logró esto?\n\nBásicamente controlando el recibo de datos con Python y dependencias de éste, en este caso de **Pyserial**.\n\n```python\nimport serial\nimport time\n\nser = serial.Serial('/dev/ttyACM0', 115200, timeout=1.0)\ntime.sleep(3)\nser.reset_input_buffer()\nprint(\"Serial OK\")\n\ntry:\n    while True:\n        time.sleep(0.01)\n        if ser.in_waiting > 0:\n            line = ser.readline().decode('utf-8').rstrip()\n            print(line)\n\nexcept KeyboardInterrupt:\n    print(\"Close Serial Communication\")\n    ser.close()\n```\n\nEn resumidas cuentas el código hace lo siguiente:\n+ Se inicializan los modulos para manejar tiempos y datos seriales (Importante instalar pyserial) y luego se procede a generar un bucle el cual esperaría datos por un puerto USB. Siendo éste en concreto el puerto **\"/dev/tty/ACM0\"**. Es el directorio donde se alojan los puertos en Raspbian (Linux).\n+ Luego hace más cosas como decodificar la información en UTF-8 (para mostrar el texto correctamente) pero no son de importancia.\n+ Ante una interrupción de teclado se detiene el script.\n\n#### Luego el código en el microcontrolador es el siguiente:\n\n```cpp\n#include <Arduino.h>\n\nvoid setup(){\nSerial.begin(115200);\nwhile(!Serial) {}\n}\n\nvoid loop(){\n  Serial.println(\"Mensaje a Raspberry Pi\");\n  Serial.write(\"Lol\");\n  delay(1000);  \n}\n```\n\nComo ven el código es muy sencillo; los mismos print que se pueden mostrar en consola para debuguear código ya bastan para enviar datos. Lo importante aquí es el **script de Python**\n\n### Setup épico\n\n![Setup Épico](../Ref/Setup_Épico.jpeg)\n\n#### Por sí a alguien le interesa mi rice en Linux *(alto rarito)*, éste se encuentra [aquí](https://github.com/Sartalan/my-linux-dotfiles)"
        },
        {
          "id": "release/five",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/five",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-29.md",
            "source": "@site/blog/Notas/2024-8-29.md",
            "title": "Actualización [ 5 ] | Explosión XDD",
            "description": "Montamos el circuito y... EXPLOTÓ XD",
            "date": "2024-08-29T00:00:00.000Z",
            "tags": [
              {
                "label": "épico",
                "permalink": "/Hidroponia-Project/blog/tags/epico"
              }
            ],
            "readingTime": 0.42,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/five",
              "title": "Actualización [ 5 ] | Explosión XDD",
              "authors": [
                "Team"
              ],
              "tags": [
                "épico"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 6 ] | Comunicación de Dispositivos",
              "permalink": "/Hidroponia-Project/blog/release/six"
            },
            "nextItem": {
              "title": "Actualización [ 4 ] | Estructura",
              "permalink": "/Hidroponia-Project/blog/release/four"
            }
          },
          "content": "Montamos el circuito y... **EXPLOTÓ XD**\n\nAunque la simulación en Proteus fuese éxitosa; no el montaje. De igual forma solo nos faltaba una resistencia y ningún componente (salvo una misera resistencia) salió dañada en el proceso. \nEl problema fue solucionado en la misma placa que explotó al día siguiente, así que no resulto en un problema grave. Fue épico, nada más que añadir.\n\nAdjuntamos pruebas:\n\n![EXPLOSIÓN EPICA WUOWOWO](../Ref/PCB_EXPLOSIÓN.jpeg)\n\n#### Efectivamente, por sí lo pensabas: La mancha negra de la mesa es obra nuestra :p"
        },
        {
          "id": "release/four",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/four",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-25.md",
            "source": "@site/blog/Notas/2024-8-25.md",
            "title": "Actualización [ 4 ] | Estructura",
            "description": "Hidroponia",
            "date": "2024-08-25T00:00:00.000Z",
            "tags": [
              {
                "label": "épico",
                "permalink": "/Hidroponia-Project/blog/tags/epico"
              }
            ],
            "readingTime": 1.36,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/four",
              "title": "Actualización [ 4 ] | Estructura",
              "authors": [
                "Team"
              ],
              "tags": [
                "épico"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 5 ] | Explosión XDD",
              "permalink": "/Hidroponia-Project/blog/release/five"
            },
            "nextItem": {
              "title": "Actualización [ 3 ] | MyCodo",
              "permalink": "/Hidroponia-Project/blog/release/three"
            }
          },
          "content": "## Hidroponia\n\n#### **Finalmente, lo terminamos; logramos terminar la estructura de la Hidroponia**\n\nHoy terminamos de instalar de forma funcional la Hidroponia. \nLa Hidroponia es, por explicarla de manera sencilla -en la foto se entiende, de igual modo- un \"circuito\" donde una bomba de agua se encarga de bombear el agua hacía arriba y, al llegar al tope, va bajando por fuerza de la gravedad por unos caños con una leve inclinación. \n\nPor sí nadie sabe lo que es una hidroponia, la función de este \"mecanismo\" básicamente permite que, por un lado el agua no se estanque, y por el otro que las plantas esten hidratadas. Al una Hidroponia carecer de tierra justamente se le agregan minerales y/o nutrientes para compensar su carencia. Una Hidroponia -puede ser- una forma muy económica de cultivar plantas en espacios reducidos *si se hace bien*. Nuestra intención en nuestro proyecto es monitorear la mayor cantidad de mágnitudes físicas de ésta.\n\n#### Estructura\n\nLa estructura de la Hidroponia no es más que una serie de caños **termofusionados** que le permiten el flujo de agua. En la parte superior de cada caño -aunque no se vea en la foto- contiene unos huecos a escala para contener unos \"recipientes/filtros\" que las raíces del platín a plantar.\n\nAunque se vea muy fácil el montaje de la estructura, realmente no lo fue; más de una vez tuvimos algún problema que ocasionó alguna pérdida de agua y tuvimos que replantear alguna parte de su diseño, así que sí alguien piensa armar una: tengalo en cuenta. \n\n![Hidroponia](../Ref/Hidroponia_one.jpeg)\n\nFinalizando con el tema. Le agradecemos mucho a nuestro profesor por habernos ayudado en el armado."
        },
        {
          "id": "release/three",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/three",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-15.md",
            "source": "@site/blog/Notas/2024-8-15.md",
            "title": "Actualización [ 3 ] | MyCodo",
            "description": "MyCodo",
            "date": "2024-08-15T00:00:00.000Z",
            "tags": [
              {
                "label": "hola",
                "permalink": "/Hidroponia-Project/blog/tags/hola"
              }
            ],
            "readingTime": 1.13,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/three",
              "title": "Actualización [ 3 ] | MyCodo",
              "authors": [
                "Team"
              ],
              "tags": [
                "hola"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 4 ] | Estructura",
              "permalink": "/Hidroponia-Project/blog/release/four"
            },
            "nextItem": {
              "title": "Comentarios | App",
              "permalink": "/Hidroponia-Project/blog/note/one"
            }
          },
          "content": "## MyCodo\n\nDecidimos utilizar MyCodo para monitorear el envío de datos del ESP32 hacía la Raspberry Pi y este será por wifi; pensamos que podríamos crear un servidor dentro de la Raspberry Pi -puede que con Express- y que éste sea la vía de comunicación entre la App y el ESP32 y, en el transcurso del trayecto, simúltaneamente monitorear dichos datos. Pero antes de proceder a hablar sobre la comunicación entre los dispositivos -del cual se tiene un diagrama que se mostrará dentro de poco- hablaremos sobre MyCodo.\n\n### ¿Qué es MyCodo?\n\nMyCodo es un Software Open Source (es decir, de código abierto) creado especificamente para generar un servidor web (nginx) que aloje MyCodo, la cual es una aplicación web creada con Python (flask) con acceso completo a los GPIO de la Raspberry. Nuestra idea es la siguiente:\n\n1. Enviarle los datos del ESP32 a la Raspberry vía Wifi usando HTTP en forma de archivos JSON.\n2. Tomar la lectura de MyCodo y almacenarla en su base de datos integrada (influxDB).\n3. Crear una API con endpoints que permitan las solicitudes GET de parte de la App para así solicitar el archivo JSON con las últimas lecturas almacenadas.\n\n### Comunicación\n\nA la comunicación entre las partes se las piensa así:\n\n![Diagrama | Comunicación](../Ref/Diagrama%20en%20Bloques%20I%20Raspberry%20Pi%20Server%20Communication.png)\n\n#### *AVISO DEL FUTURO: LA COSA **NO FUE ASÍ**; ESTE GRÁFICO ES INCORRECTO*"
        },
        {
          "id": "note/one",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/note/one",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-11.md",
            "source": "@site/blog/Notas/2024-8-11.md",
            "title": "Comentarios | App",
            "description": "Notas",
            "date": "2024-08-11T00:00:00.000Z",
            "tags": [
              {
                "label": "app",
                "permalink": "/Hidroponia-Project/blog/tags/app"
              },
              {
                "label": "indoor",
                "permalink": "/Hidroponia-Project/blog/tags/indoor"
              }
            ],
            "readingTime": 2.065,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "note/one",
              "title": "Comentarios | App",
              "authors": [
                "Team"
              ],
              "tags": [
                "app",
                "indoor"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 3 ] | MyCodo",
              "permalink": "/Hidroponia-Project/blog/release/three"
            },
            "nextItem": {
              "title": "Actualización [ 1 ] | Circuito - Simulación",
              "permalink": "/Hidroponia-Project/blog/release/two"
            }
          },
          "content": "## Notas\n\nMuy seguramente vayamos añadiendo una sección de \"Notas\" para añadir actualizaciones y/o ideas nuevas respecto a qué pensamos integrar y que no; algo hablado con nuestro profesor fue integrar una aplicación que estuvimos desarrollando para el que iba a ser nuestro primer proyecto del año, pero se canceló.\nEste se trataba de un Indoor, el cuál iba a tener una funcionalidad muy parecida a lo que estamos haciendo con la Hidroponia al tener que, también, tener el control absoluto del ambiente para cuidar de una planta. \n\nÉsta, al claramente haberse cancelado el proyecto, se le canceló su desarrollo; pero eso no supuso su extinción, se la quiso agregar a nuestro próximo proyecto: Herzarmband. \nHerzarmband iba a ser un reloj/brazalete -nunca se decidió- que tomaría la frecuencia cardíaca y, por aprovechar el código previamente creado para la aplicación. Aunque esto claramente era **muy** impráctico y: sin sentido. \n\n### ¿Qué más aparte de mostrar la frecuencia cardíaca iba a hacer?\n\nEra un completo sin sentido, salvo que, se pensará añadir algún tipo de algoritmo que predijera y detectará de una forma u otra problemas cardiovasculares -como los hacen muchos en el mercado-  pero eso ya dejaría de ser un proyecto de Electrónica y se convertiría en uno de Software; no es la idea de la materia.\n\nPero afortunadamente es genuinamente práctica para integrarla en éste proyecto, sirviendo perfectamente como una interfáz gráfica para visualizar en tiempo real por wifi el estado de tus plantas e hidroponia en general. \n\nA raíz de esto añadiremos la app al proyecto; la idea es crear una comunicación HTTP entre la Raspberry Pi y la Aplicación de celular. Para ello nuestra idea es crear un servidor con **Javascript y Express** (Libreria Backend de Nodejs) que tenga interacción con el recibo de datos que reciba la Raspberry del circuito -ya sea por wifi o algún diferente protocolo de comunicación- y, setear dichos datos con una API la cuál tendrá un endpoint donde la aplicación de celular, la cual también está escrita con Javascript -concretamente con el Framework de **React Native** se conectará.\nMuy posiblemente utilizando archivos **JSON** para almacenar la información.\n\nPara la fecha actual, la app luce de la siguiente forma:\n\n![App Indoor](../Ref/App-Indoor.gif)\n\nEl diagrama de bloques que diseñamos para explicar su comunicación HTTP para proponerselo a nuestro profesor es:\n\n![Diagrama De Comunicación entre Servidor-Cliente | HTTP](../Ref/App-Communication.jpeg)\n\nSí usted quiere ver más en profundidad su desarrollo, su repositorio y ramal de Github donde se programo se encuentra [aquí](https://github.com/Sartalan/Indoor-Project/tree/App)."
        },
        {
          "id": "release/two",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/two",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-8.md",
            "source": "@site/blog/Notas/2024-8-8.md",
            "title": "Actualización [ 1 ] | Circuito - Simulación",
            "description": "Logramos simular y realizar el circuito correctamente en Proteus, para ello hicimos muchas cosas:",
            "date": "2024-08-08T00:00:00.000Z",
            "tags": [
              {
                "label": "kicad",
                "permalink": "/Hidroponia-Project/blog/tags/kicad"
              },
              {
                "label": "proteus",
                "permalink": "/Hidroponia-Project/blog/tags/proteus"
              },
              {
                "label": "code",
                "permalink": "/Hidroponia-Project/blog/tags/code"
              }
            ],
            "readingTime": 3.625,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/two",
              "title": "Actualización [ 1 ] | Circuito - Simulación",
              "authors": [
                "Team"
              ],
              "tags": [
                "kicad",
                "proteus",
                "code"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Comentarios | App",
              "permalink": "/Hidroponia-Project/blog/note/one"
            },
            "nextItem": {
              "title": "Comienzo del Proyecto",
              "permalink": "/Hidroponia-Project/blog/release/one"
            }
          },
          "content": "Logramos simular y realizar el circuito correctamente en Proteus, para ello hicimos muchas cosas:\n\n1. Instalamos la *libreria* de Arduino en Proteus para así poder simular correctamente los códigos en este programa, y luego realizamos el circuito correspondiente.\n\n## ¿Qué hicimos?\n\nQuisimos también aprovechar la realización del proyecto para aprobar otra materia; Electrónica Aplicada. La cual nos daba a elegir si simular un circuito o no, así que lo realizamos aplicandolo como solución a un problema en nuestro proyecto; regular la corriente alterna.\n\nSe trata de la realización de un disparo en la señal de alterna a través de la utilización de optoacopladores y triac's.\n\nÉsta es una forma de manipular la onda senoidal de la corriente alterna mediante el uso de la corriente continúa. En nuestro caso se buscó utilizar optoacopladores como medida óptica de separación entre las dos corrientes y, crear un código qué, mediante interrupciones, **supiera** cuando la AC oscila mediante el lado contrario; pero ello suponía otro problema: se debía de saber exactamente y con gran precisión **cuando la onda cruzaba por cero en primer lugar**. Viniendo, recién ahora, lo **interesante** ⊂(◉‿◉)つ.\n\n---\n\n## Explicación \n\nEn primeras antes de hablar del código debemos de hablar del circuito; consta de dos partes: una de monitoreo y otra de control, en la primera se busca tener una lectura constante de la onda senoidal para determinar sí esta cruza por cero, y en la segunda se busca \"disparar\" hacía la onda senoidal para cortarla, y poder así **regular su intensidad**\n\n¿Cómo la parte de control logra esto?\n\nPara poder determinar cuando disparar o no por el código, básicamente se la divide a la onda senoidal en varias partes.\n1. Primero calculando su periodo, utilizando para ello la cuenta:\n\n   ![Calculo Uno](../Ref/CalculoUno.png)\n\n2. Luego, se la divide en 360 partes para así tener un ciclo entero.\n\n   ![Calculo Dos](../Ref/CalculoDos.png)\n\n+ Una vez tenidos estos datos podemos asumir diversas cosas:\n\n1. Un semiciclo de nuestra onda es equivalente a: 360/2.\n2. Cada 46μs recorremos 1° de nuestra onda.\n3. 46μs x (360/2) Es equivalente al recorrido **total** de tiempo que conlleva un solo semiciclo.\n\nAhora sí, comencemos con el código. \n\n```cpp\n #include <TimerOne.h>\n    int GradoElectrico = 0;\n    \n    void GradoZero(){\n      GradoElectrico = 0;\n    }\n\n    void Disparo() {\n      GradoElectrico++;\n\n      // Resto de instrucciones...\n      // (Instrucciones de cuando disparar)\n      \n    }\n    \n    void setup(){\n      attachInterrupt(0, GradoZero, CHANGE);\n      Timer1.initialize(46);\n      Timer1.attachInterrupt(Disparo);\n    }\n\n    void loop(){ \n        // Resto de instrucciones... \n    }\n    \n    ```\n\n### Básicamente aplicamos todo lo aprendido: \n\nComencemos con la función Setup:\n\n```cpp\n    attachInterrupt(0,GradoZero,CHANGE);\n```\n\nEsta linea de código pertenece a la libreria de TimerOne, y se encarga de inicializar una entrada de datos en el pin 0 (que por default es el 2 y, que cada vez que cambie de HIGH a LOW o viceversa, ejecuta la función GradoZero(), la cual reestablece los valores de la variable GradoElectrico.\n\n```cpp\n    Timer1.initialize(46);\n```\n\nLe indicamos al programa que inicialice un temporizador de 46μs.\n\n```cpp\n    Timer1.attachInterrupt(Disparo)\n```\n\n\nCada vez que finaliza el temporizador de 46μs se ejecuta la función Disparo()\n\nEn resumidas cuentas, el código se encarga de ejecutar un cronometro que cada 46μs ejecuta una función, la cuál aumentará una variable int; pero, recién llegado a un valor LOW en la onda, es decir 180° o, 46μs x 180° de tiempo; el cronometro volverá a reiniciarse y la variable de grados también lo hará junto con ella.\n\n\nEs decir, este simple código tiene la posibilidad de manipular por completo un ciclo de nuestra onda senoidal partiendola a ésta en 180° al detectar el cruce por cero antes de terminar el ciclo completo. Pudiendo con ello ejecutar scripts de código que tan solo tengan que variar entre los valores de 1 - 180 de la variable int de GradoElectrico y, así, determinando cuando disparar dentro del semiciclo.\n- Nota: Esta es una versión *muy* básica del accionamiento del disparo, pero sirve.\n\n\nPero básicamente, con este principio podés hacer lo siguiente:\n\n![Simulación Proteus del Circuito](../Ref/Video-Simulacion.gif)\n\nEn este caso se tomó el mapeo del valor de un potenciometro el cuál fue sincronizado con un solo semiciclo de la onda senoidal, pudiendo, básicamente elegir cuando disparar.\n\n#### Circuito | Proteus\n\n![Circuito simulable en Proteus](../Ref/Prototipo-Simulacion.jpeg)\n\n#### Esquemático | Kicad\n\n![Esquemático del circuito en Kicad](../Ref/Prototipo-Esquemático.jpeg)\n\n#### PCB | Kicad \n\n![PCB de Prototipo del circuito en Kicad](../Ref/Prototipo-PCB.jpeg)\n\n\n### Componentes | Datasheet -por ahora-\n\n1. [Optoacoplador - MOC3021](https://pdf1.alldatasheet.es/datasheet-pdf/view/53870/FAIRCHILD/MOC3021.html)\n2. [Optoacoplador - 4N25](https://pdf1.alldatasheet.es/datasheet-pdf/view/158124/VISHAY/4N25.html)\n3. [Triac - BT139](https://pdf1.alldatasheet.es/datasheet-pdf/view/16787/PHILIPS/BT139-600.html)"
        },
        {
          "id": "release/one",
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/release/one",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-8-1.md",
            "source": "@site/blog/Notas/2024-8-1.md",
            "title": "Comienzo del Proyecto",
            "description": "Hidroponia - Project",
            "date": "2024-08-01T00:00:00.000Z",
            "tags": [
              {
                "label": "hola",
                "permalink": "/Hidroponia-Project/blog/tags/hola"
              }
            ],
            "readingTime": 1.34,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Wolfsrudel",
                "title": "All the Team",
                "url": "https://github.com/Sartalan/Hidroponia-Project",
                "imageURL": "https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",
                "key": "Team"
              }
            ],
            "frontMatter": {
              "slug": "release/one",
              "title": "Comienzo del Proyecto",
              "authors": [
                "Team"
              ],
              "tags": [
                "hola"
              ]
            },
            "unlisted": false,
            "prevItem": {
              "title": "Actualización [ 1 ] | Circuito - Simulación",
              "permalink": "/Hidroponia-Project/blog/release/two"
            }
          },
          "content": "## Hidroponia - Project\n\nComenzó nuestro **segundo** proyecto del año como una empresa ficticia llamada *Wolfsrudel*.\nSe tratá de una Hidroponia que será -ídoneamente- un sistema de control completo donde se monitoreará cada una de las mágnitudes esenciales que debe de necesitar una planta para desarrollarse adecuadamente. \n\nNuestra meta es la siguiente:\n+ Montar una estructura que servirá para alojar las plantas y les permita una vía de acceso a agua que está siendo bombeada por una bomba, mientras a su vez se debe desarrollar un circuito que debe regular las mágnitudes fisicas e ídoneas que requiere cada tipo de planta. \n\n## ¿Cómo haremos ésto?\n\nA ciencia cierta todavía no lo sabemos e iremos averigúandolo con el pasar del tiempo; pero nuestra propuesta es controlar una serie de sensores con un microcontrolador (mientras tanto, para las pruebas: el Arduino) y, para no gastar plata innecesariamente lo simularemos en **Proteus**.\n\n## ¿Cómo será la estructura? \n\nA raíz de ver diversos videos de Youtube, nuestra idea es montar una estructura con caños más finos por un lado para subir el agua por una mini bomba y, que ésta caiga, recorriendo así todos los caños donde se alojarán las plantas, los cuales serán más grandes. \nPara ello aprovecharemos una estructura de metal prearmada que realizaron alumnos de Electrónica en el pasado para éste mismo proyecto.\n\nLa estructura será similar a:\n\n//Boceto\n\n---\n\nComo volvemos a repetir: no tomen éste blog como una información completamente veraz respecto a nuestro proyecto; este puede cambiar al, justamente, no tener ni idea de lo que estamos haciendo continúamente.\n*Habla la voz de la experiencia (´･_･`)*"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "release/thirteen",
            "release/twelve",
            "release/eleven",
            "release/ten",
            "release/nine",
            "release/eight",
            "release/seven",
            "release/six",
            "release/five",
            "release/four"
          ],
          "metadata": {
            "permalink": "/Hidroponia-Project/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 2,
            "totalCount": 14,
            "nextPage": "/Hidroponia-Project/blog/page/2",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        },
        {
          "items": [
            "release/three",
            "note/one",
            "release/two",
            "release/one"
          ],
          "metadata": {
            "permalink": "/Hidroponia-Project/blog/page/2",
            "page": 2,
            "postsPerPage": 10,
            "totalPages": 2,
            "totalCount": 14,
            "previousPage": "/Hidroponia-Project/blog",
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/Hidroponia-Project/blog/tags/avances": {
          "label": "Avances",
          "items": [
            "release/thirteen",
            "release/twelve",
            "release/eleven"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/avances",
          "pages": [
            {
              "items": [
                "release/thirteen",
                "release/twelve",
                "release/eleven"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/avances",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 3,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/lampara-uv": {
          "label": "Lampara UV",
          "items": [
            "release/thirteen"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/lampara-uv",
          "pages": [
            {
              "items": [
                "release/thirteen"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/lampara-uv",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/armado": {
          "label": "Armado",
          "items": [
            "release/twelve"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/armado",
          "pages": [
            {
              "items": [
                "release/twelve"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/armado",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/explosion": {
          "label": "Explosión",
          "items": [
            "release/eleven"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/explosion",
          "pages": [
            {
              "items": [
                "release/eleven"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/explosion",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/communication": {
          "label": "Communication",
          "items": [
            "release/ten"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/communication",
          "pages": [
            {
              "items": [
                "release/ten"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/communication",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/my-codo": {
          "label": "MyCodo",
          "items": [
            "release/ten",
            "release/nine",
            "release/eight"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/my-codo",
          "pages": [
            {
              "items": [
                "release/ten",
                "release/nine",
                "release/eight"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/my-codo",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 3,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/epico": {
          "label": "épico",
          "items": [
            "release/seven",
            "release/six",
            "release/five",
            "release/four"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/epico",
          "pages": [
            {
              "items": [
                "release/seven",
                "release/six",
                "release/five",
                "release/four"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/epico",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/hola": {
          "label": "hola",
          "items": [
            "release/three",
            "release/one"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/hola",
          "pages": [
            {
              "items": [
                "release/three",
                "release/one"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/app": {
          "label": "app",
          "items": [
            "note/one"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/app",
          "pages": [
            {
              "items": [
                "note/one"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/app",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/indoor": {
          "label": "indoor",
          "items": [
            "note/one"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/indoor",
          "pages": [
            {
              "items": [
                "note/one"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/indoor",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/kicad": {
          "label": "kicad",
          "items": [
            "release/two"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/kicad",
          "pages": [
            {
              "items": [
                "release/two"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/kicad",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/proteus": {
          "label": "proteus",
          "items": [
            "release/two"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/proteus",
          "pages": [
            {
              "items": [
                "release/two"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/proteus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        },
        "/Hidroponia-Project/blog/tags/code": {
          "label": "code",
          "items": [
            "release/two"
          ],
          "permalink": "/Hidroponia-Project/blog/tags/code",
          "pages": [
            {
              "items": [
                "release/two"
              ],
              "metadata": {
                "permalink": "/Hidroponia-Project/blog/tags/code",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ],
          "unlisted": false
        }
      },
      "blogTagsListPath": "/Hidroponia-Project/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/Hidroponia-Project/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/Hidroponia-Project/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        },
        "unlisted": false
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-sass": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}