"use strict";(self.webpackChunkherzarmband_blog=self.webpackChunkherzarmband_blog||[]).push([[9634],{2810:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=o(4848),i=o(8453);const r={slug:"release/six",title:"Actualizaci\xf3n [ 6 ] | Comunicaci\xf3n de Dispositivos",authors:["Team"],tags:["\xe9pico"]},t=void 0,s={permalink:"/Hidroponia-Project/blog/release/six",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Notas/2024-9-1.md",source:"@site/blog/Notas/2024-9-1.md",title:"Actualizaci\xf3n [ 6 ] | Comunicaci\xf3n de Dispositivos",description:"Comunicaci\xf3n",date:"2024-09-01T00:00:00.000Z",tags:[{label:"\xe9pico",permalink:"/Hidroponia-Project/blog/tags/epico"}],readingTime:1.705,hasTruncateMarker:!1,authors:[{name:"Wolfsrudel",title:"All the Team",url:"https://github.com/Sartalan/Hidroponia-Project",imageURL:"https://img.desmotivaciones.es/202303/tonto-perro-imagenes.jpg",key:"Team"}],frontMatter:{slug:"release/six",title:"Actualizaci\xf3n [ 6 ] | Comunicaci\xf3n de Dispositivos",authors:["Team"],tags:["\xe9pico"]},unlisted:!1,prevItem:{title:"Actualizaci\xf3n [ 7 ] | Avances",permalink:"/Hidroponia-Project/blog/release/seven"},nextItem:{title:"Actualizaci\xf3n [ 5 ] | Explosi\xf3n XDD",permalink:"/Hidroponia-Project/blog/release/five"}},l={authorsImageUrls:[void 0]},c=[{value:"Comunicaci\xf3n",id:"comunicaci\xf3n",level:2},{value:"<strong>Raspberry Pi - Microcontrolador</strong>",id:"raspberry-pi---microcontrolador",level:4},{value:"Quedando el gr\xe1fico tal que as\xed:",id:"quedando-el-gr\xe1fico-tal-que-as\xed",level:4},{value:"<strong>Nota:</strong> En aquel momento se pensaba utilizar el ESP WROOM, luego cambiamos al Arduino Nano al no necesitar del Wifi y, tener mayor acceso a la informaci\xf3n de como programarlo.",id:"nota-en-aquel-momento-se-pensaba-utilizar-el-esp-wroom-luego-cambiamos-al-arduino-nano-al-no-necesitar-del-wifi-y-tener-mayor-acceso-a-la-informaci\xf3n-de-como-programarlo",level:4},{value:"Importante",id:"importante",level:3},{value:"\xbfC\xf3mo se logr\xf3 esto?",id:"c\xf3mo-se-logr\xf3-esto",level:3},{value:"Luego el c\xf3digo en el microcontrolador es el siguiente:",id:"luego-el-c\xf3digo-en-el-microcontrolador-es-el-siguiente",level:4},{value:"Setup \xe9pico",id:"setup-\xe9pico",level:3},{value:"Por s\xed a alguien le interesa mi rice en Linux <em>(alto rarito)</em>, \xe9ste se encuentra aqu\xed",id:"por-s\xed-a-alguien-le-interesa-mi-rice-en-linux-alto-rarito-\xe9ste-se-encuentra-aqu\xed",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"comunicaci\xf3n",children:"Comunicaci\xf3n"}),"\n",(0,a.jsx)(n.h4,{id:"raspberry-pi---microcontrolador",children:(0,a.jsx)(n.strong,{children:"Raspberry Pi - Microcontrolador"})}),"\n",(0,a.jsxs)(n.p,{children:["Decidimos finalmente comunicar la Raspberry Pi y el Microcontrolador entre s\xed v\xeda ",(0,a.jsx)(n.strong,{children:"USB"})," , este cambio -aunque dr\xe1stico- es mucho m\xe1s conveniente para nuestro proyecto, y de igual forma no cambiar\xe1 demasiado al tener que vernos obligados a utilizar wifi para comunicar la Raspberry Pi con la App."]}),"\n",(0,a.jsx)(n.h4,{id:"quedando-el-gr\xe1fico-tal-que-as\xed",children:"Quedando el gr\xe1fico tal que as\xed:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Gr\xe1fico piola",src:o(3222).A+"",width:"3381",height:"3380"})}),"\n",(0,a.jsxs)(n.h4,{id:"nota-en-aquel-momento-se-pensaba-utilizar-el-esp-wroom-luego-cambiamos-al-arduino-nano-al-no-necesitar-del-wifi-y-tener-mayor-acceso-a-la-informaci\xf3n-de-como-programarlo",children:[(0,a.jsx)(n.strong,{children:"Nota:"})," En aquel momento se pensaba utilizar el ESP WROOM, luego cambiamos al Arduino Nano al no necesitar del Wifi y, tener mayor acceso a la informaci\xf3n de como programarlo."]}),"\n",(0,a.jsx)(n.h3,{id:"importante",children:"Importante"}),"\n",(0,a.jsx)(n.p,{children:"Cuesti\xf3n: Aqu\xed viene lo importante:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Logramos enviar correctamente los datos del microcontrolador a la Raspberry Pi por USB."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"c\xf3mo-se-logr\xf3-esto",children:"\xbfC\xf3mo se logr\xf3 esto?"}),"\n",(0,a.jsxs)(n.p,{children:["B\xe1sicamente controlando el recibo de datos con Python y dependencias de \xe9ste, en este caso de ",(0,a.jsx)(n.strong,{children:"Pyserial"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import serial\nimport time\n\nser = serial.Serial('/dev/ttyACM0', 115200, timeout=1.0)\ntime.sleep(3)\nser.reset_input_buffer()\nprint(\"Serial OK\")\n\ntry:\n    while True:\n        time.sleep(0.01)\n        if ser.in_waiting > 0:\n            line = ser.readline().decode('utf-8').rstrip()\n            print(line)\n\nexcept KeyboardInterrupt:\n    print(\"Close Serial Communication\")\n    ser.close()\n"})}),"\n",(0,a.jsx)(n.p,{children:"En resumidas cuentas el c\xf3digo hace lo siguiente:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Se inicializan los modulos para manejar tiempos y datos seriales (Importante instalar pyserial) y luego se procede a generar un bucle el cual esperar\xeda datos por un puerto USB. Siendo \xe9ste en concreto el puerto ",(0,a.jsx)(n.strong,{children:'"/dev/tty/ACM0"'}),". Es el directorio donde se alojan los puertos en Raspbian (Linux)."]}),"\n",(0,a.jsx)(n.li,{children:"Luego hace m\xe1s cosas como decodificar la informaci\xf3n en UTF-8 (para mostrar el texto correctamente) pero no son de importancia."}),"\n",(0,a.jsx)(n.li,{children:"Ante una interrupci\xf3n de teclado se detiene el script."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"luego-el-c\xf3digo-en-el-microcontrolador-es-el-siguiente",children:"Luego el c\xf3digo en el microcontrolador es el siguiente:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:'#include <Arduino.h>\n\nvoid setup(){\nSerial.begin(115200);\nwhile(!Serial) {}\n}\n\nvoid loop(){\n  Serial.println("Mensaje a Raspberry Pi");\n  Serial.write("Lol");\n  delay(1000);  \n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Como ven el c\xf3digo es muy sencillo; los mismos print que se pueden mostrar en consola para debuguear c\xf3digo ya bastan para enviar datos. Lo importante aqu\xed es el ",(0,a.jsx)(n.strong,{children:"script de Python"})]}),"\n",(0,a.jsx)(n.h3,{id:"setup-\xe9pico",children:"Setup \xe9pico"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Setup \xc9pico",src:o(8056).A+"",width:"1600",height:"1200"})}),"\n",(0,a.jsxs)(n.h4,{id:"por-s\xed-a-alguien-le-interesa-mi-rice-en-linux-alto-rarito-\xe9ste-se-encuentra-aqu\xed",children:["Por s\xed a alguien le interesa mi rice en Linux ",(0,a.jsx)(n.em,{children:"(alto rarito)"}),", \xe9ste se encuentra ",(0,a.jsx)(n.a,{href:"https://github.com/Sartalan/my-linux-dotfiles",children:"aqu\xed"})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},3222:(e,n,o)=>{o.d(n,{A:()=>a});const a=o.p+"assets/images/Diagrama en Bloques I Raspberry Pi Server Communication TWO-dcbc5c8ce4a86da64abc94c1c00a9ad5.png"},8056:(e,n,o)=>{o.d(n,{A:()=>a});const a=o.p+"assets/images/Setup_\xc9pico-8a48761fdbe4548c0e90c9350c4e1c7e.jpeg"},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>s});var a=o(6540);const i={},r=a.createContext(i);function t(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);